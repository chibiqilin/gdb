DB Pipeline for Grapevine project

./
./compare_picks.sh		# compares picks between parse_report output and a csv containing picks from GrapevineSummaryTable from teams
./data/			# Folder containing parse_report output, genotype data database (currently just concatenated parsed reports with NP and headers removed, and an assigned internal ID), and dummy database with internalID column added
./generate_db.sh		# Generates a dummy db with externalid by concatenating parse_report output, save as genotype call database 
./GrapeSampleTable.xlsx	# Example database for grapevine info
./insert_db.py			# Inserts a single entry into a db by specifying flags and internalID
./old_csv			# Processed csv files and parse_report outputs
./parse_report.py		# Parses QIAxcel data and outputs a clean report
./query.py			# Queries a genotype data database given string. E.g. see test_query.txt
./random_samples.csv		# Random samples generated by sample_n_lines.sh
./sample_n_lines.sh		# Randomly samples n lines from parse_report output. Example usage: for f in old_csv/output_2022-08-*; do ./sample_n_lines.sh 2 $f >> random_samples.csv; done
./STR_7Markers_Size.txt	# Marker size file provided by Dr. Liang
./test_query.txt		# Bash command used for quickly testing query.py
